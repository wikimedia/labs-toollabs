_sql() {
  local cur="${COMP_WORDS[COMP_CWORD]}"
  local prev="${COMP_WORDS[COMP_CWORD-1]}"
  local opts="--cluster --extension --skip-column-names"  # --verbose is rarely used
  COMPREPLY=()

  if [[ ${cur} == -* ]]; then
    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
  fi

  case "${prev}" in
    --cluster)
      COMPREPLY=( $(compgen -W "analytics web" -- ${cur}) )
      ;;
    --extension)
      COMPREPLY=( $(compgen -W "termstore" -- ${cur}) )
    *)
      # the docs advertise `sql local` rather than `sql toolsdb`. If one
      # autocompletes with 'tools' we want to end this argument rather than
      # suggesting 'toolsdb' and 'tools-db' are still options.
      local -a DBS=(
        meta local tools
        $(/usr/bin/sql -N --cluster web meta_p 'SELECT dbname FROM wiki WHERE is_closed = 0;')
      )
      if [[ $COMP_CWORD -gt 1 && -n $(/usr/bin/comm -12 \
        <(printf '%s\n' "${COMP_WORDS[@]}" | /usr/bin/sort -u | /bin/sed 's/_p$//') \
        <(printf '%s\n' "${DBS[@]}" | /usr/bin/sort -u) \
      ) ]]; then
        # The argument list has an intersection with the database name.
        # We are at the SQL stage; don't tab-complete.
        COMPREPLY=()
      else
        COMPREPLY=($(compgen -W "${opts} ${DBS[*]}" -- ${cur}))
      fi
    ;;
  esac
}
complete -F _sql sql
